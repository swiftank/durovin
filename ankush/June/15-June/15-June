define(['ko', 'jquery', 'uiComponent', 'Codazon_OneStepCheckout/js/model/agreements-modal', 'Magento_Customer/js/model/customer', 'Magento_Checkout/js/model/quote', 'Magento_Checkout/js/action/set-shipping-information', 'Magento_Checkout/js/action/set-billing-address', 'Magento_SalesRule/js/action/set-coupon-code', 'Magento_Ui/js/modal/alert'], function(ko, $, Component, agreementsModal, customer, quote, setShippingInformationAction, setBillingAddress, setCouponCodeAction, alert) {
    'use strict';
    var checkoutConfig = window.checkoutConfig,
        agreementManualMode = 1,
        agreementsConfig = checkoutConfig ? checkoutConfig.checkoutAgreements : {};
    return Component.extend({
        defaults: {
            template: 'Codazon_OneStepCheckout/checkout/checkout-agreements'
        },
        isVisible: agreementsConfig.isEnabled,
        agreements: agreementsConfig.agreements,
        modalTitle: ko.observable(null),
        modalContent: ko.observable(null),
        modalWindow: null,
        isPlaceOrderActionAllowed: ko.observable(false),
        updatedAddressText: ko.observable(false),
        isAgreementRequired: function(element) {
            return element.mode == agreementManualMode;
        },
        showContent: function(element) {
            this.modalTitle(element.checkboxText);
            this.modalContent(element.content);
            agreementsModal.showModal();
        },
        getCheckboxId: function(context, agreementId) {
            var paymentMethodName = '',
                paymentMethodRenderer = context.$parents[1];
            if (paymentMethodRenderer) {
                paymentMethodName = paymentMethodRenderer.item ? paymentMethodRenderer.item.method : '';
            }
            return 'agreement_' + paymentMethodName + '_' + agreementId;
        },
        initModal: function(element) {
            agreementsModal.createModal(element);
        },
        changeHandler: function(data, event) {
            $("#checkout-payment-method-load input[name='agreement[" + data.agreementId + "]']").click();
            $(event.target).next().click();
            return true;
        },
        validateShipping: function() {
            if (!quote.isVirtual()) {
                var shippingMethod = quote.shippingMethod();
                if (shippingMethod.method_code == 'pickup') {
                    console.log(quote.shippingAddress());
                    if (quote.shippingAddress().firstname != "") {
                        return true;
                    } else {
                        alert({
                            content: $.mage.__('Please select a store.'),
                            actions: {
                                always: function() {}
                            }
                        });
                    }
                } else {
                    return requirejs('uiRegistry').get('checkout.steps.shipping-step.shippingAddress').validateShippingInformation();
                }
            } else {
                return true;
            }
        },
        validateForm: function(form) {
            return $(form).validation() && $(form).validation('isValid');
        },
        validatePayment: function() {
            if ($(".payment-method._active").length == 0) {
                alert({
                    content: $.mage.__('Please specify a payment method.')
                });
                return false;
            } else {
                return true;
            }
        },
        placeOrder: function() {
            var self = this;
           
            $('.message.message-error.error').remove();
            if (this.validateForm('#checkout_agreements_block') && this.validatePayment() && this.validateShipping()) {
                this.isPlaceOrderActionAllowed(true);
                this.updatedAddressText(false);
                var processingPopup = setInterval(() => {
                    alert({
                        title: $.mage.__("Don't refresh the page"),
                        modalClass: 'slow_internet_popup confirm',
                        content: $.mage.__('Your Internet seems a bit slow.<br><br>The Order has been processed.<br> Please contact us for payment confirmation'),
                        actions: {
                            always: function() {}
                        },
                        buttons: [{
                            text: $.mage.__('Contact Us'),
                            class: 'action-primary action-accept',
                            click: function () {
                                this.closeModal(true);
                            }
                        }]
                    });
                    clearInterval(processingPopup);
                }, 1000);
                $('.slow_internet_popup').hide();
                if ($('#submit-shipping-method').length) {
                    var shippingMethod = quote.shippingMethod();
                    if (shippingMethod.method_code == 'pickup') {} else {
                        if ($("#co-payment-form ._active input[type='checkbox']").prop('checked') == true || $("#co-payment-form .billing-address-same-as-shipping-block input[type='checkbox']").prop('checked') == true) {
                            if (checkoutConfig.isCustomerLoggedIn) {
                                quote.billingAddress(quote.shippingAddress())
                            } else {
                                quote.billingAddress(checkoutConfig.shippingAddress);
                            }
                        }
                    }
                    $(".payment-method._active").find('.action.primary.checkout').trigger('click');
                    var billingDetails = $('.billing-address-details');
                    if (billingDetails.length == 0) {
                        this.updatedAddressText(true);
                    }
                    setTimeout(() => {
                        var afterClickErr = $('.payment-methods .message.message-error.error');
                        if (afterClickErr.length > 0 || billingDetails.length == 0) {
                            this.isPlaceOrderActionAllowed(false);
                            clearInterval(processingPopup);
                        }
                    }, 1500);
                    var checkingError = setInterval(function() {
                        if ($('.message.message-error.error').length > 0) {
                            self.isPlaceOrderActionAllowed(false);
                            clearInterval(checkingError);
                            clearInterval(processingPopup);
                        }
                    }, 10000);
                } else {
                    $(".payment-method._active").find('.action.primary.checkout').trigger('click');
                }
            }
        }
    });
});

/var/www/html/durovinbathrooms/pub/static/frontend/Codazon/fastest_westylefashion/en_GB/Codazon_OneStepCheckout/js/view/checkout-agreements.min.js
/var/www/html/durovinbathrooms/app/design/frontend/Codazon/fastest/fashion/web/css/custom_styles.css


